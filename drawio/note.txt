1. 22 年主要工作盘点
    主要完成相关业务模块的开发，包括数据采集以及偿二代相关的业务，具体细分如下：
    1.1 数据采集
         对于数据采集部分，我的主要任务是完成相关业务功能模块的开发，具体包括以下几个功能模块：
        1.1.1 数据对比功能：这个功能的主要目的是实现两个版本的数据之间的对比，将对比的结果展示到客户端。这个功能是其它业务处理的核心部分，包括数据批处理定时任务以及数据埋点等，都依赖于这个功能。这个功能本身具备一定的难度，并且由于需求给出的数据描述缺乏一定的合理性，因此处理起来就比较困难
        1.1.2 数据埋点功能：这个功能的主要目的是对于客户端执行修改数据的操作执行一个后置处理，通过本次编辑数据之后的结果与上一次审批通过时的结果进行对比，如果发现存在差异则存入当前版本的数据快照，同时发送邮件通知对应的投后经理进行审批
        1.1.3 实体主数据部分：这一部分的内容主要是针对投前存在的数据给与一次重新编辑的机会，大部分的逻辑在当前系统中已经存在，但这也是难点之一，重新复用他人的代码可能会导致一些比较令人痛苦的情况
        1.1.4 投后借据信息变更部分：这一部分的主要内容在于对于投前已经存在的借据数据（包括行权信息、还本信息、费用信息）进行一次重新修改的操作，由于这些信息都十分重要，因此需要对应的流程来确认这些数据的合理性。这部分的主要难点在于需要与投前的数据进行同步，而投前的数据存在一定的缺陷导致这一部分的处理变得比较棘手。再加上不断变更的需求，这一部分的处理很容易出现问题
        1.1.5 浮动利率测算：这个功能的提出目的是由于还本利率在还本的过程中可能会发生变动，当检测到发生变动时需要重新计算对应的还本付息数据，当重新测算的还本付息数据发生变动时，则需要发送邮件通知对应的投后经理。这一部分由于已经存在相应的还本付息测算接口，因此这里的测算部分以及校验部分不是特别困难，但是针对检测利率发生变动的处理，则稍微有点麻烦，同时由于系统中存在的数据缺陷，也导致了一些比较严重的 bug
         
    1.2 偿二代
        偿二代的主要目的是针对监管部门相关的业务处理，这部分的业务较为复杂。而对于开发人员来讲，依旧是按照需要，完成相关功能模块的开发：
        1.2.1 穿透组模板管理：这是一个列表页，主要是对相关项目或者证券的穿透情况的一个概览，同时涉及部分编辑的操作
        1.2.2 穿透任务分发：针对证券生成的穿透任务的管理页，主要涉及到穿透任务的生成、编辑、分发、数据导出等操作。由于这部分的证券数据需要从其它数据库中读取，但是开发时只涉及 MySQL 数据库的操作，鉴于性能和开发难度的考虑，最终由数据开发人员完成了数据的同步工作（这里感谢数据开发人员）。这部分的数据导出功能涉及到 Excel 文件的处理，由于一开始我没有接触过这一部分的内容，因此对我来讲具有一定的开发难度
        1.2.3 穿透任务填报管理：同样是针对穿透任务的管理页面，不过这部分的数据只涉及 “已分发” 的任务
        1.2.4 风险探测：对于穿透任务填报，当填报的数据需要进行保存时，需要校验填写的数据是否存在风险（比如：未填写证券代码等情况），对于存在风险的数据在保存时，需要禁止其执行 “保存” 的行为。这部分的校验的处理和 “利率变更” 的处理类似，都是通过 “策略模式” 的方式来简化开发的难度，同时降低代码量
        1.2.5 资源锁：由于填报数据时只允许一人在同一时刻编辑对应的穿透任务，因此对于多人同时编辑数据的情况需要进行并行控制。在当下主流的解决方案中，都是通过使用第三方工具来实现资源的控制，因为这能够保证对资源控制的有效性和可靠性，然而在我们开发的旧有系统中并不存在这样的中间件，因此这使得我们不得不自行设计对应的资源锁。

2. 个人优势及工作能力项提升、不足：
    2.1 个人优势
    	通过对 2022 年工作的自我评估，个人认为我的主要优势在于开发的技术水平尚可，能够独立地完成相关功能模块的开发，同时能够帮助同事解决一些比较棘手的问题。比如对于 “数据管理端” 列表的排序处理，单独查询两个互不相关的业务数据进行排序可能不是特别方便，特别是对于二者的关联关系不是那么明显的情况下，单独使用一个 SQL 语句完成数据的查找和排序是一件十分困难的事情。我通过分析数据的规模，结合现有的业务逻辑，将原有的排序处理放到了业务层进行处理，不仅简化了查询的难度，同时提高了处理的性能。除此之外，我还经常为同事提供解决问题的合理方案，大大降低了冗余的代码以及开发和维护的难度
    	除此之外，我还经常会去阅读现有框架的部分源代码，将源代码中我认为优秀的处理方案应用到我们先有的开发上。同时，由于有这些阅读基础，因此在定位问题、发现问题以及解决问题上能够快速地进行处理
    2.2 能力项提升
    	主要的能力项提升可能在与对于所学知识的运用，比如，在开发项目前，可能了解过 AOP、并发、事务等一系列开发的理论知识，但是并没有实际的运用。我依旧记得我第一次使用 AOP 的时候发现切面的代理未能生效，在经过了多方面的排查后，通过阅读 Spring 中对于 AOP 的处理，最终通过额外代理类的形式完成了 AOP 的使用。除了对于理论知识的实际适用外，对于代码的设计我认为也是有所提升的，特别是，在阅读 《设计模式—可复用面向对象基础》一书中时，在刚开始阅读的时候不能够作者描述的可复用情况，但在实际运用中，我才慢慢地了解到这部分知识的精髓所在。就想对于 “数据埋点” 业务的处理，一开始只是希望在我们的业务模块上加上这一功能，后来随着需求的变更，希望在其它业务处理的接口上也加上这一功能，本来单独重写一部分这样的业务逻辑是比较枯燥乏味的，因此我将这部分的代码进行重构，其它的人员只需要编写少量的钩子方法即可复用这一功能，从而大大减少了工作量
    	其次，对于业务的也有了一定的了解，尽管大部分的工作都是 围绕这 “赠删改查” 这四个进行处理，但是在处理的过程中也能大致了解到这个模块的功能
    2.3 不足
    	最大的不足之处可能就是对于业务不够了解，就比如我一开始进项目时不知道如何处理一样，从而导致了一系列的问题，后来在逐渐了解这部分的业务逻辑之后，才逐渐变得熟络起来
    	
 3. 23年工作规划
         继续保持自己的优势，在工作之余了解一些行业知识来弥补业务知识的空缺
         
 4. 部门问题及建议
         缺乏一定的竞争，无法有效调动员工之间的积极性
